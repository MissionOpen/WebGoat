#1) HEADER & TRIGGER
name: "Codeql-Trigger-on-Push&Pr"

on:
  push:
    branches: [ "custom_queries" ]
  pull_request:
    branches: [ "custom_queries" ]

#2) CONFIGURAZIONE JOBS
jobs:
  analyze:
    name: Analyze Java
    runs-on: ubuntu-latest

#3) PERMESSI - DEFINISCE COSA PUO' FARE IL WORKFLOW NEL REPOSITORY
    permissions:
      security-events: write # Per scrivere risultati di sicurezza
      packages: read # Per scaricare query pack CodeQL
      actions: read # Per leggere altri workflow
      contents: read # Per leggere il codice del repo

#4) CHECKOUT
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necessario per rilevare i file modificati

#5) RILEVAMENTO FILE MODIFICATI - per ottimizzazione non per skippare
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        files: |
          **/*.java
          **/*.xml
          **/*.properties

#6) SETUP JAVA CONDIZIONALE
    - name: Setup Java
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

#7) CONDIZIONE PER ESEGUIRE CODEQL SOLO SE CI SONO FILE MODIFICATI
    - name: Initialize CodeQL
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: github/codeql-action/init@v3
      with:
        languages: java-kotlin
        build-mode: none
        # Abilita le tue query personalizzate
        queries: .codeql/custom-queries

#8a) BUILD PARZIALE PER JAVA - SOLO MODULI MODIFICATI
    - name: Build changed Java modules only
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
        
        changed_modules=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | \
          xargs -r dirname | \
          xargs -r -I {} find {} -name "pom.xml" -type f 2>/dev/null | \
          xargs -r dirname | \
          sort -u | \
          tr '\n' ',' | \
          sed 's/,$//')
        
        echo "Changed modules: $changed_modules"
        
        if [ ! -z "$changed_modules" ]; then
          mvn clean compile -pl "$changed_modules" -am -q
        else
          echo "No Java modules to build"
        fi

      # CHE COSA FA?
      # Lista i file modificati
      # Trova le cartelle contenenti pom.xml
      # Identifica i moduli Maven da compilare
      # Compila SOLO quei moduli (-pl = projects list)
      # -am = compila anche le dipendenze
      # -q = modalità silenziosa

      # Utile se hai un monorepo Maven multi-modulo (es: core, api, web, ognuno con un pom.xml).
      # Inutile se hai un progetto Maven singolo modulo, questo step non serve a nulla.

 #8b) PROBLEMA DI QUESTA PIPELINE

      # INPUT FILE MODIFICATI - ESEMPIO
      # src/main/java/org/owasp/webgoat/User.java
      # src/main/java/org/owasp/webgoat/Controller.java

      # PIPELINE SCRIPT
      # Step 1: dirname
      # src/main/java/org/owasp/webgoat
      # src/main/java/org/owasp/webgoat
      # Step 2: find pom.xml
      # find src/main/java/org/owasp/webgoat -name "pom.xml"
      # RESULT: NESSUN FILE TROVATO! (pom.xml è nella root)
      # Step 3: dirname
      # NESSUN INPUT
      # Final result: 
      # changed_modules=""  # VUOTO!

      # RISULTATO FINALE
      # if [ ! -z "$changed_modules" ]; then
      # NON ESEGUITO (changed_modules è vuoto)
      # mvn clean compile -pl "$changed_modules" -am -q
      # else
      # echo "No Java modules to build"  # ← SEMPRE QUESTO!
      # fi

      # PROBLEMI:
      # Lo script NON compila mai nulla
      # CodeQL non ha bytecode da analizzare
      # Analysis fallisce o è incompleta
      # Workflow inutilmente complesso

#8c) BUILD TOTALE
      # - name: Build WebGoat
      # if: steps.changed-files.outputs.any_changed == 'true'  
      # run: |
      #   echo "Building WebGoat project..."
      #   mvn clean compile -q -DskipTests

#9) ANALISI CODEQL - AGGIUNGI CONDIZIONE E CATEGORY PER SCANSIONE PARZIALE
    - name: Perform CodeQL Analysis
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:java-kotlin/partial"

#10) LOG DEI RISULTATI
    - name: Summary
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "WebGoat CodeQL analysis completed"
        echo "File analyzed: ${{ steps.changed-files.outputs.all_changed_files }}"
        echo "Language analyzed: java-kotlin "

    - name: No Changes Summary
      if: steps.changed-files.outputs.any_changed == 'false'
      run: |
        echo "No Java/XML/Properties files changed - CodeQL analysis skipped for performance"
        echo "Push to main branch or modify relevant files to trigger analysis"
