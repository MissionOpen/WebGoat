#1) HEADER & TRIGGER
name: "Codeql on Push & PR / Total Scan"

on:
  push:
    branches: [ "custom_queries" ]
  pull_request:
    branches: [ "custom_queries" ]

#2) CONFIGURAZIONE JOBS
jobs:
  analyze:
    name: Analyze Java - Full Build
    runs-on: ubuntu-latest

#3) PERMESSI - DEFINISCE COSA PUO' FARE IL WORKFLOW NEL REPOSITORY
    permissions:
      security-events: write # Per scrivere risultati di sicurezza
      packages: read # Per scaricare query pack CodeQL
      actions: read # Per leggere altri workflow
      contents: read # Per leggere il codice del repo

#4) CHECKOUT
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necessario per rilevare i file modificati

#5) RILEVAMENTO FILE MODIFICATI
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        files: |
          **/*.java
          **/*.xml
          **/*.properties

#6) SETUP JAVA CONDIZIONALE
    - name: Setup Java
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'

#7) INIZIALIZZAZIONE CODEQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java-kotlin
        build-mode: manual  # Per controllo completo della build
        queries: .codeql/custom-queries

#8) BUILD
    - name: Build WebGoat - Full Project
      run: |
        echo "Building complete WebGoat project..."
        mvn clean compile -DskipTests -q
        echo "Build completed successfully"

#9) ANALISI CODEQL
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:java-kotlin"

#10) LOG
    - name: Analysis Summary
      run: |
        echo "Full WebGoat CodeQL analysis completed"
        echo "Complete project analyzed"
        echo "Language: java-kotlin"
        echo "Trigger: ${{ github.event_name }}"
